apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.cds_gateway.name | quote }}
  labels:
{{ include "cds.labels" . | indent 4 }}
    app.name: {{ .Values.cds_gateway.name | quote }}
spec:
  replicas: {{ .Values.cds_gateway.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cds.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.name: {{ .Values.cds_gateway.name | quote }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cds.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.name: {{ .Values.cds_gateway.name | quote }}
        app: {{ .Values.cds_gateway.name | quote }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Values.cds_gateway.name | quote }}
          image: "{{ .Values.cds_gateway.image.repository }}:{{ .Values.cds_gateway.image.tag }}"
          imagePullPolicy: {{ .Values.cds_gateway.image.pullPolicy }}
          ports:
            - name: web
              containerPort: {{ .Values.cds_gateway.port }}
              protocol: TCP
          env:
            - name: AUTH-HOST
              value: "http://{{ .Values.global.sso.hostName }}{{ .Values.global.domain }}"
            - name: GATEWAY-HOST
              value: "http://{{ .Values.global.gateway.hostName }}{{ .Values.global.domain }}"
            - name: GATEWAY-NAME
              value: {{ .Values.global.gateway.hostName | quote }}
            - name: SPRING.SECURITY.OAUTH2.CLIENT.REGISTRATION.GATEWAY.CLIENT-ID
              value: {{ .Values.global.gateway.client_id | quote }}
            - name: SPRING.SECURITY.OAUTH2.CLIENT.REGISTRATION.GATEWAY.CLIENT-SECRET
              value: {{ .Values.global.gateway.client_secret | quote }}
            - name: QUANTEX.SSO.COOKIE-DOMAIN
              value: {{ .Values.global.domain | quote }}
          resources:
            {{- toYaml .Values.cds_gateway.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /opt/deployments/config
              name: config
      volumes:
        - name: config
          configMap:
            defaultMode: 256
            items:
              - key: application.yml
                path: application.yml
            name: {{ .Values.cds_gateway.name | quote }}
            optional: false
    {{- with .Values.cds_gateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.cds_gateway.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.cds_gateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}


---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.cds_gateway.name | quote }}
  labels:
{{ include "cds.labels" . | indent 4 }}
    app.name: {{ .Values.cds_gateway.name | quote }}
spec:
  type: {{ .Values.cds_gateway.service.type }}
  ports:
    - name: {{ .Values.cds_gateway.name | quote }}
      port: 80
      targetPort: {{ .Values.cds_gateway.port }}
      protocol: TCP
  selector:
    app.kubernetes.io/name: {{ include "cds.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.name: {{ .Values.cds_gateway.name | quote }}


